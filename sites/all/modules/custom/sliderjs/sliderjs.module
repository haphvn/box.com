<?php
/**
 * @Reviewed Date Apr 25, 2013
 */
  
function sliderjs_library() {// Nivo Slider
  $path = libraries_get_path('sliderjs');
  $libraries['sliderjs'] = array(
    'title' => 'SliderJS',
    'website' => 'http://slidesjs.com',
    'version' => VERSION,
    'js' => array(
      "{$path}/jquery.slides.min.js" => array('group' => JS_LIBRARY, 'weight' => 0),
    ),
  );
  
  return $libraries;
}
/**
 * Implements hook_field_formatter_info().
 */
function sliderjs_field_formatter_info() {
  return array(
    'sliderjs' => array(
      'label' => t('SliderJS'),
      'field types' => array('image'),
      'settings' => array(
        'slidejs_image_style' => '',
        'sliderjs_width' => '',
        'sliderjs_height' => '',
        'sliderjs_navigation' => '',
      ),
    ),
  );
}

/**
 * Implements hook_theme().
 */
function sliderjs_theme() {
  return array(
    'sliderjs_field_formatter' => array(
      'variables' => array(
      	'item' => NULL,
        'display_settings' => array(),
      ),
    ),
    'sliderjs_field_wapper' => array(
      'variables' => array(
      	'items' => NULL,
    		'entity' => NULL,
        'field' => array(),
        'display_settings' => array(),
      )
    ),
  );
}

function theme_sliderjs_field_wapper($variables) {
  drupal_add_library('sliderjs', 'sliderjs');
  
  $items       = $variables['items'];
  $entity      = $variables['entity'];
  $field       = $variables['field'];
  $settings    = $variables['display_settings'];
  
  foreach ($items as $delta => $item) {
    $elements[$delta] = array(
      '#theme' => 'sliderjs_field_formatter',
      '#item' => $item,
      '#display_settings' => $settings,
    );
  }
  
  
  
  $id      = 'sliderjs-' . uniqid();
  $output  = '<div id="' . $id . '" class="slides">';
  $output .= drupal_render($elements);
  $output .= '</div>';
  
  $navigation = $settings['sliderjs_width'] ? 'true' : 'false';
  $width      = $settings['sliderjs_width'] ? $settings['sliderjs_width'] : 940;
  $height     = $settings['sliderjs_height'] ? $settings['sliderjs_height'] : 528;
  $js = <<<JAVASCRIPT
  	// ready function 
    jQuery(document).ready(function(){
        jQuery('#{$id}').slidesjs({
          width: {$width},
          height: {$height},
          navigation: $navigation
        });
      });
JAVASCRIPT;

  drupal_add_js($js, array('type' => 'inline', 'scope' => 'footer', 'weight' => 5));
  return $output;
}

function theme_sliderjs_field_formatter($variables) {
  $item = $variables['item'];
  $settings = $variables['display_settings'];
  
  $image = array(
    'path' => $item['uri'],
    'alt' => $item['alt'],
    'title' => $item['title'],
    'style_name' => $settings['slidejs_image_style'],
  );
  
  if ($style_name = $settings['slidejs_image_style']) {
    $path = image_style_url($style_name, $image['path']);
  }
  else {
    $path = file_create_url($image['path']);
  }
  if ($style_name) {
    return theme('image_style', $image);
  }
  else {
    return theme('image', $image);
  }
}

function sliderjs_field_formatter_settings_form($field, $instance, $view_mode, $form, &$form_state) {
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];
  
  $image_styles = image_style_options(FALSE);
  
  $element['slidejs_image_style'] = array(
  	'#title' => t('Image Style'),
    '#type' => 'select',
    '#options'	=> $image_styles,
    '#default_value'	=> $settings['slidejs_image_style'],
    '#description' => t('Slide JS Image Style'),
  );
  
  $element['sliderjs_width'] = array(
  	'#title' => t('Width'),
    '#type' => 'textfield',
    '#default_value'	=> $settings['sliderjs_width'],
    '#description' => t('Slide JS Width'),
  );
  
  $element['sliderjs_height'] = array(
  	'#title' => t('Height'),
    '#type' => 'textfield',
  	'#default_value'	=> $settings['sliderjs_height'],
    '#description' => t('Slide JS Height'),
  );
  
  $element['sliderjs_navigation'] = array(
  	'#title' => t('Navigation'),
    '#type' => 'select',
    '#options'	=> array(0 => t('No'), 1 => t('Yes')),
  	'#default_value'	=> $settings['sliderjs_navigation'],
    '#description' => t('Slide JS Navigation'),
  );
  
  return $element;
}


/**
 * Implements hook_field_formatter_settings_summary().
 */
function colorbox_field_formatter_settings_summary($field, $instance, $view_mode) {
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];

  $summary = array();
  
  if ($settings['sliderjs_width']) {
    $summary[] = t('Width: @width', array('@width' => $settings['sliderjs_width']));
  }
  
  if ($settings['sliderjs_height']) {
    $summary[] = t('Width: @height', array('@height' => $settings['sliderjs_height']));
  }
  
  if ($settings['sliderjs_navigation']) {
    $summary[] = t('Width: @navigation', array('@navigation' => $settings['sliderjs_navigation']));
  }
  
  if (empty($summary)) {
    $summary[] = t('Default settings');
  }
  return implode('<br />', $summary);
}

/**
 * Implements hook_field_formatter_view().
 */
function sliderjs_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = array();
  switch ($display['type']) {
    case 'sliderjs':
      if (!empty($items)) { 
        $element[0] = array(
          '#theme'  => 'sliderjs_field_wapper',
          '#items'   => $items,
          '#entity' => $entity,
          '#field' => $field,
          '#display_settings' => $display['settings'],
        );
      }
      
      break;
  }
  return $element;
}