<?php

/**
 * @file
 * Core Library module schema.
 */

/**
 * Implements hook_schema().
 */
function core_library_schema() {
  $schema = array();

  $schema['aggregation_resource'] = array(
    'description' => t("Table for aggregation dynamic resource tracking"),
    'fields' => array(
      'hash' => array(
        'description' => 'Primary identifier',
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
      ),
      'map' => array(
        'description' => 'File map, serialized array of file path',
        'type' => 'text',
      ),
      'type' => array(
        'description' => "File type, e.g. 'css' or 'js', could be extended",
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '',
      ),
      'created' => array(
        'description' => 'Unix timestamp of creation.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'lifetime' => array(
        'description' => 'Entry lifetime.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('hash'),
    'indexes' => array(
      'aggregation_type_idx' => array('type'),
      'aggregation_created_idx' => array('created'),
    ),
  );

  $schema['core_library_pages'] = array(
    'fields' => array(
      'lid' => array(
        'description' => 'Primary identifier',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'path' => array(
        'description' => 'Drupal path',
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => '',
      ),
    ),
    'primary key' => array('lid', 'path'),
  );

  $schema['core_library_stat'] = array(
    'fields' => array(
      'lid' => array(
        'description' => 'Primary identifier',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'file' => array(
        'description' => 'File path',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'hits' => array(
        'description' => 'Hits count',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'hits_anonymous' => array(
        'description' => 'Anonymous hit',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'hits_admin' => array(
        'description' => 'Admin hit',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'module' => array(
        'description' => 'Module name, full path will be determined using its path',
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
        'default' => '',
      ),
      'type' => array(
        'description' => 'File type, can be CSS or JS, maybe something else',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '',
      ),
    ),
    'primary key' => array('lid'),
    'unique keys' => array('file' => array('file')),
  );

  $schema['core_library_pages'] = array(
    'fields' => array(
      'lid' => array(
        'description' => 'Primary identifier',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'path' => array(
        'description' => 'Drupal path',
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => '',
      ),
    ),
    'primary key' => array('lid', 'path'),
  );

  return $schema;
}

/**
 * Add the aggregation files table.
 */
function core_library_update_7201() {
  // This additional check ensures we won't try to recreate the table twice
  // since previously done upgrades, since we renamed the hook_update_N()
  // versions.
  if (!db_table_exists('aggregation_resource')) {
    db_create_table('aggregation_resource', drupal_get_schema_unprocessed('core_library', 'aggregation_resource'));
  }
}

/**
 * Add the 'exclude' flag into already learnt files to avoid PHP warnings.
 */
function core_library_update_7202() {
  variable_set('core_library_updated', TRUE);

  $files = variable_get('library_aggregation_orphans', array());
  if (!empty($files)) {
    foreach ($files as $type => $array) {
      foreach ($array as $file => $options) {
        // This additional check ensures we won't erase anything from
        // previously done upgrades, since we renamed the hook_update_N()
        // versions.
        if (!isset($options['exclude'])) {
          $files[$type][$file]['exclude'] = FALSE;
        }
      }
    }
    variable_set('library_aggregation_orphans', $files);
  }
}
